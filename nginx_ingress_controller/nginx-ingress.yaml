kind: Service
apiVersion: v1
metadata:
  name: nginx-ingress
  namespace: nginx-ingress
  uid: 87329cc9-429d-40dd-9222-02ca32bffc16
  resourceVersion: '36284'
  creationTimestamp: '2022-04-23T16:52:40Z'
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"nginx-ingress","namespace":"nginx-ingress"},"spec":{"externalTrafficPolicy":"Local","ports":[{"name":"http","port":80,"protocol":"TCP","targetPort":80},{"name":"https","port":443,"protocol":"TCP","targetPort":443}],"selector":{"app":"nginx-ingress"},"type":"LoadBalancer"}}
  managedFields:
    - manager: kubectl-client-side-apply
      operation: Update
      apiVersion: v1
      time: '2022-04-23T16:52:40Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:spec:
          f:allocateLoadBalancerNodePorts: {}
          f:externalTrafficPolicy: {}
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":80,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":443,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
    - manager: dashboard
      operation: Update
      apiVersion: v1
      time: '2022-04-23T16:54:26Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:externalIPs: {}
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 30410
    - name: https
      protocol: TCP
      port: 443
      targetPort: 443
      nodePort: 32578
  selector:
    app: nginx-ingress
  clusterIP: 10.105.7.211
  clusterIPs:
    - 10.105.7.211
  type: LoadBalancer
  externalIPs:
    - 192.168.0.134  <----YOUR SERVER IP's
    - 192.168.0.135  <----YOUR SERVER IP's
  sessionAffinity: None
  externalTrafficPolicy: Local
  healthCheckNodePort: 31532
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  allocateLoadBalancerNodePorts: true
  internalTrafficPolicy: Cluster
status:
  loadBalancer: {}
